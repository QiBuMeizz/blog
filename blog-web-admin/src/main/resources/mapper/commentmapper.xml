<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gw.blog.web.admin.dao.CommentDao">

    <sql id="CommentColumns">
          a.id,
          a.name,
          a.email,
          a.text,
          a.pic,
          a.is_parent AS 'isParent',
          a.parent_id AS 'parentId',
          a.content_id AS 'contentId',
          a.status,
          a.created,
          a.updated,
          b.name AS 'parentName'
    </sql>

    <sql id="LeftJoinComment">
        LEFT JOIN comment AS b ON a.parent_id = b.id
    </sql>

    <select id="selectComment" resultType="Comment" parameterType="java.util.Map">
        SELECT
        <include refid="CommentColumns"/>
        FROM comment AS a
        <include refid="LeftJoinComment"/>
        WHERE
          a.status = '1' AND a.parent_id = #{comment.id} AND a.content_id = #{comment.contentId}
        ORDER BY a.created ASC
        LIMIT #{index},#{size}
    </select>

    <select id="selectById" resultType="com.gw.blog.domain.Comment">
        SELECT
        <include refid="CommentColumns"/>
        FROM comment AS a
        <include refid="LeftJoinComment"/>
        WHERE a.status = '1'
        AND a.id = #{id};
    </select>

    <insert id="insert">
        INSERT INTO content (
          name,
          email,
          text,
          pic,
          is_parent,
          parent_id,
          content_id,
          status,
          created,
          updated,
        )
        VALUES
          (
            #{name},
            #{email},
            #{text},
            #{pic},
            #{isParent},
            #{parentId},
            #{contentId},
            #{status},
            #{created},
            #{updated}
          );
    </insert>

    <update id="update">
        UPDATE
          comment
        SET
          id = #{id},
          name = #{name},
          email = #{email},
          text = #{text},
          pic = #{pic},
          is_parent = #{isParent},
          parent_id = #{parentId},
          content_id = #{contentId},
          status = #{status},
          created = #{created},
          updated = #{updated}
        WHERE `id` = #{id};

    </update>

</mapper>